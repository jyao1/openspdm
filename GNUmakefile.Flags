## @file
#  SPDM library.
#
#  Copyright (c) 2020, Intel Corporation. All rights reserved.<BR>
#
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
##

#
# Build Configuration Macro Definition
#
ARCH = X64
TOOLCHAIN = GCC
TARGET = DEBUG
CRYPTO = MbedTls

ifeq ("$(ARCH)","X64")
    $(info ARCH=X64)
else ifeq ("$(ARCH)","Ia32")
    $(echo ARCH=Ia32)
else
    $(error unknown ARCH)
endif

ifeq ("$(TOOLCHAIN)","GCC")
    $(info TOOLCHAIN=GCC)
else ifeq ("$(TOOLCHAIN)","CLANG")
    $(info TOOLCHAIN=CLANG)
else ifeq ("$(TOOLCHAIN)","CBMC")
    $(info TOOLCHAIN=CBMC)
else ifeq ("$(TOOLCHAIN)","AFL")
    $(info TOOLCHAIN=AFL)
else ifeq ("$(TOOLCHAIN)","KLEE")
    $(info TOOLCHAIN=KLEE)
else
    $(error unknown TOOLCHAIN)
endif

ifeq ("$(TARGET)","DEBUG")
    $(info TARGET=DEBUG)
else ifeq ("$(TARGET)","RELEASE")
    $(info TARGET=RELEASE)
else
    $(error unknown TARGET)
endif

ifeq ("$(CRYPTO)","MbedTls")
    $(info CRYPTO=MbedTls)
else ifeq ("$(CRYPTO)","Openssl")
    $(info CRYPTO=Openssl)
else
    $(error unknown CRYPTO)
endif

#
# Shell Command Macro
#
CP = cp -r -f
MD = mkdir -p
MV = mv -f
RD = rm -r -f
RM = rm -f

#
# Tools definitions specific to this module
#
MAKE = make
MAKEFILE = GNUmakefile

ifeq ("$(TOOLCHAIN)","CBMC")
    CC = goto-cc
    CC_FLAGS = -c -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -fno-common -fno-stack-protector -maccumulate-outgoing-args -mno-red-zone -Wno-address -fpie -fno-asynchronous-unwind-tables -flto -DUSING_LTO -Wno-switch -Wno-maybe-uninitialized -Wno-uninitialized  -Wno-builtin-declaration-mismatch -Wno-nonnull-compare
    MBEDTLS_FLAGS = 
    OPENSSL_FLAGS = -include Base.h -Wno-error=maybe-uninitialized -Wno-error=format -Wno-format -Wno-error=unused-but-set-variable
    CMOCKA_FLAGS = -std=gnu99 -Wpedantic -Wall -Wshadow -Wmissing-prototypes -Wcast-align -Werror=address -Wstrict-prototypes -Werror=strict-prototypes -Wwrite-strings -Werror=write-strings -Werror-implicit-function-declaration -Wpointer-arith -Werror=pointer-arith -Wdeclaration-after-statement -Werror=declaration-after-statement -Wreturn-type -Werror=return-type -Wuninitialized -Werror=uninitialized -Werror=strict-overflow -Wstrict-overflow=2 -Wno-format-zero-length -Wmissing-field-initializers -Wformat-security -Werror=format-security -fno-common -Wformat -fno-common -fstack-protector-strong

    SLINK = echo
    SLINK_FLAGS2 = >$@

    DLINK = goto-cc
    DLINK_OBJECT_FILES = $(STATIC_LIBRARY_OBJECT_FILES)
    DLINK_FLAGS = -o $(BIN_DIR)/$(BASE_NAME) -flto -L/usr/X11R6/lib
    DLINK_FLAGS2 = -Wno-error -no-pie

else ifeq ("$(TOOLCHAIN)","GCC")
    CC = gcc
    CC_FLAGS = -c -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -fno-common -fno-stack-protector -maccumulate-outgoing-args -mno-red-zone -Wno-address -fpie -fno-asynchronous-unwind-tables -flto -DUSING_LTO -Wno-switch -Wno-maybe-uninitialized -Wno-uninitialized  -Wno-builtin-declaration-mismatch -Wno-nonnull-compare
    MBEDTLS_FLAGS = 
    OPENSSL_FLAGS = -include Base.h -Wno-error=maybe-uninitialized -Wno-error=format -Wno-format -Wno-error=unused-but-set-variable
    CMOCKA_FLAGS = -std=gnu99 -Wpedantic -Wall -Wshadow -Wmissing-prototypes -Wcast-align -Werror=address -Wstrict-prototypes -Werror=strict-prototypes -Wwrite-strings -Werror=write-strings -Werror-implicit-function-declaration -Wpointer-arith -Werror=pointer-arith -Wdeclaration-after-statement -Werror=declaration-after-statement -Wreturn-type -Werror=return-type -Wuninitialized -Werror=uninitialized -Werror=strict-overflow -Wstrict-overflow=2 -Wno-format-zero-length -Wmissing-field-initializers -Wformat-security -Werror=format-security -fno-common -Wformat -fno-common -fstack-protector-strong
    CC_FLAGS += --coverage -fprofile-arcs -ftest-coverage

    SLINK = gcc-ar

    DLINK = gcc
    DLINK_OBJECT_FILES = -Wl,--start-group,@$(OUTPUT_DIR)/tmp.list,--end-group
    DLINK_FLAGS = -o $(BIN_DIR)/$(BASE_NAME) -flto -L/usr/X11R6/lib
    DLINK_FLAGS2 = -Wno-error -no-pie
    DLINK_FLAGS += --coverage -lgcov -fprofile-arcs -ftest-coverage

else ifeq ("$(TOOLCHAIN)","AFL")
    CC = afl-gcc
    CC_FLAGS = -c -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -fno-common -fno-stack-protector -maccumulate-outgoing-args -mno-red-zone -Wno-address -fpie -fno-asynchronous-unwind-tables -DUSING_LTO -Wno-switch -Wno-maybe-uninitialized -Wno-uninitialized  -Wno-builtin-declaration-mismatch -Wno-nonnull-compare
    MBEDTLS_FLAGS = 
    OPENSSL_FLAGS = -include Base.h -Wno-error=maybe-uninitialized -Wno-error=format -Wno-format -Wno-error=unused-but-set-variable
    CMOCKA_FLAGS = -std=gnu99 -Wpedantic -Wall -Wshadow -Wmissing-prototypes -Wcast-align -Werror=address -Wstrict-prototypes -Werror=strict-prototypes -Wwrite-strings -Werror=write-strings -Werror-implicit-function-declaration -Wpointer-arith -Werror=pointer-arith -Wdeclaration-after-statement -Werror=declaration-after-statement -Wreturn-type -Werror=return-type -Wuninitialized -Werror=uninitialized -Werror=strict-overflow -Wstrict-overflow=2 -Wno-format-zero-length -Wmissing-field-initializers -Wformat-security -Werror=format-security -fno-common -Wformat -fno-common -fstack-protector-strong
  
    SLINK = gcc-ar

    DLINK = gcc
    DLINK_OBJECT_FILES = -Wl,--start-group,@$(OUTPUT_DIR)/tmp.list,--end-group
    DLINK_FLAGS = -o $(BIN_DIR)/$(BASE_NAME) -L/usr/X11R6/lib
    DLINK_FLAGS2 = -Wno-error -no-pie

else ifeq ("$(TOOLCHAIN)","CLANG")
    CC = clang
    CC_FLAGS = -c -g -fshort-wchar -fno-strict-aliasing -Wall  -Wno-array-bounds -ffunction-sections -fdata-sections -fno-common -fno-stack-protector  -mno-red-zone -Wno-address -fpie -fno-asynchronous-unwind-tables -flto -DUSING_LTO -Wno-switch 
    MBEDTLS_FLAGS = 
    OPENSSL_FLAGS = -include Base.h -Wno-error=maybe-uninitialized -Wno-error=format -Wno-format -Wno-error=unused-but-set-variable
    CMOCKA_FLAGS = -std=gnu99 -Wpedantic -Wall -Wshadow -Wmissing-prototypes -Wcast-align -Werror=address -Wstrict-prototypes -Werror=strict-prototypes -Wwrite-strings -Werror=write-strings -Werror-implicit-function-declaration -Wpointer-arith -Werror=pointer-arith -Wdeclaration-after-statement -Werror=declaration-after-statement -Wreturn-type -Werror=return-type -Wuninitialized -Werror=uninitialized -Werror=strict-overflow -Wstrict-overflow=2 -Wno-format-zero-length -Wmissing-field-initializers -Wformat-security -Werror=format-security -fno-common -Wformat -fno-common -fstack-protector-strong

    SLINK = llvm-ar

    DLINK = clang
    DLINK_OBJECT_FILES = -Wl,--start-group,@$(OUTPUT_DIR)/tmp.list,--end-group
    DLINK_FLAGS = -o $(BIN_DIR)/$(BASE_NAME) -flto -L/usr/X11R6/lib
    DLINK_FLAGS2 = -Wno-error -no-pie
	
else ifeq ("$(TOOLCHAIN)","KLEE")
    CC = clang
    CC_FLAGS = -c -g -fno-strict-aliasing -Wall  -Wno-array-bounds -ffunction-sections -fdata-sections -fno-common -fno-stack-protector  -mno-red-zone -Wno-address -fpie -fno-asynchronous-unwind-tables -flto -DUSING_LTO -Wno-switch -emit-llvm -DTEST_WITH_KLEE=TRUE -DDEBUG_ASSERT_CHOICE=0
    MBEDTLS_FLAGS = 
    OPENSSL_FLAGS = -include Base.h -Wno-error=maybe-uninitialized -Wno-error=format -Wno-format -Wno-error=unused-but-set-variable
    CMOCKA_FLAGS = -std=gnu99 -Wpedantic -Wall -Wshadow -Wmissing-prototypes -Wcast-align -Werror=address -Wstrict-prototypes -Werror=strict-prototypes -Wwrite-strings -Werror=write-strings -Werror-implicit-function-declaration -Wpointer-arith -Werror=pointer-arith -Wdeclaration-after-statement -Werror=declaration-after-statement -Wreturn-type -Werror=return-type -Wuninitialized -Werror=uninitialized -Werror=strict-overflow -Wstrict-overflow=2 -Wno-format-zero-length -Wmissing-field-initializers -Wformat-security -Werror=format-security -fno-common -Wformat -fno-common -fstack-protector-strong

    SLINK = llvm-ar

    DLINK = llvm-link
	DLINK_OBJECT_FILES = $(STATIC_LIBRARY_OBJECT_FILES)
    DLINK_FLAGS = -o $(BIN_DIR)/$(BASE_NAME)
	
endif

ifeq ("$(ARCH)","X64")
    CC_FLAGS += -m64 -DNO_MSABI_VA_FUNCS -mcmodel=small
else ifeq ("$(ARCH)","Ia32")
    CC_FLAGS += -m32
endif
ifeq ("$(TARGET)","DEBUG")
    CC_FLAGS += -O0
else ifeq ("$(TARGET)","RELEASE")
    CC_FLAGS += -Os
endif

